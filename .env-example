##############################################################################################
# Choose a code for your app and a nice name:
export APP_CODE=""
export APP_NAME=""
export APP_TITLE="Fera $APP_NAME App"
export APP_DESCRIPTION=""

# You can leave these as is, they'll generate based on the details above.
export NGROK_SUBDOMAIN="fera-$APP_CODE"
export BASE_APP_URL="https://$NGROK_SUBDOMAIN.ngrok.io"
export WEB_SEVER_PORT=$PORT

# These values are generates from your Fera Partner app @ https://app.fera.ai/partners/apps
export FERA_CLIENT_ID=""
export FERA_CLIENT_SECRET=""

# You can leave this value as IS here, but in production you'll need to set it to $APP_CODE.fera.live/...
export FERA_REDIRECT_URI="https://$NGROK_SUBDOMAIN.ngrok.io/auth/fera/callback"

# Generate a secret key base using your terminal and past it here: `openssl rand -hex 64`
# This is used to encrypt some things locally. Once it's set, don't change it.
export SECRET_KEY_BASE=""

# You can probably leave these AS IS unless you're a Fera core engineer working on some very specific things
export FERA_APP_URL="https://app.fera.ai"
export FERA_API_URL="https://api.fera.ai"

# If you installed postgresql with homebrew on OSX or some similar tool, you probably can leave these out and the server
# will default to using your user with empty password. However, if you set a password for some reason (which you should
# not do locally in development), then you can set the redis credentials here.
# export DATABASE_NAME=""
# export DATABASE_USERNAME=""
# export DATABASE_PASSWORD=""
# export DATABASE_HOST="localhost"

# If you installed redis with homebrew on OSX or some similar tool, you probably can leave these out as well and it will
# use the default credentials.
# export REDIS_URL="redis://:password@localhost:6379"
# export REDIS_DB="0"

##############################################################################################
# Custom Environment Variables:

# Put any of your app's own environment variables here.
# Remember to also set them in production after your code deploys to the remote server.
